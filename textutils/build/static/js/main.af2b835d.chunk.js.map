{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","name","role","class","onClick","toggleMode","htmlFor","defaultProps","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","useState","text","setText","style","color","heading","for","value","onChange","event","target","backgroundColor","rows","newText","showAlert","split","length","About","myStyle","setmyStyle","btntext","setBtnText","border","App","setMode","setAlert","message","setTimeout","document","body","setInterval","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af2b835d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'; \r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.name}</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n                </a>\r\n            </li>\r\n            </ul>\r\n\r\n            <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    name: PropTypes.string\r\n\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Mera Title',\r\n    name: 'The Name'\r\n};","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n    }\r\n\r\n    const handleToLower = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\" \");\r\n \r\n    return (\r\n        <>\r\n        <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <label for=\"myBox\" class=\"form-label\">Example textarea</label>\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to upper case</button>\r\n\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleToLower}>Clear List</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your Word Count Summary</h1>\r\n            <p>{text.split(\" \").length} words here and {text.length} cvdharacters</p>\r\n\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text: \"Enter something in the textbox above to preview it\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [myStyle, setmyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleStyle = ()=>{\r\n        if(myStyle.color === 'black'){\r\n            setmyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n                border: '1px solid white'\r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }    \r\n        else{\r\n            setmyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n        <h2 className=\"my-3\">About Us</h2>\r\n\r\n\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\" >\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button \" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container my-3\">\r\n\r\n<button onClick={toggleStyle} type=\"button\" className= \"btn btn-primary my-3\">{btntext}</button>\r\n</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\n// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\n\nfunction App() {\n// const [mode, setMode] = useState('light');\nconst [mode, setMode] = useState('light');\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n}\n\n  const toggleMode=()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"DarkMode has been enabled\", \"success\");\n      document.title = 'TextUtils : Dark Mode';\n\n      setInterval(() => {\n        document.title = 'TextUtils is Awesome!';\n      }, 1000);\n\n      setInterval(() => {\n        document.title = 'TextUtils is Amazing!';\n      }, 2000);\n    \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"LightMode has been Enabled\", \"success\");\n      document.title = 'TextUtils : Light Mode';\n\n    }\n  }\n\n  return (\n    <>\n\n<Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    \n    <div className=\"container my-4\">\n\n    <Routes>\n        <Route exact path=\"/about\">\n          <About/>\n        </Route>\n\n        <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Suck My Dick!\" mode={mode}/>\n        </Route>\n    </Routes>\n    </div>\n</Router>\n\n    </>\n  );\n}  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}